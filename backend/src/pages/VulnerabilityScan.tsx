import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent } from '@/components/ui/card';
import Button from '@/components/ui/Button'; // Ensure the Button component exists

const VulnerabilityScan = () => {
  const [status, setStatus] = useState<string>('');
  const [scanResults, setScanResults] = useState<string[]>([]);

  // Simulate vulnerability scan for each technique
  const startScan = (method: string) => {
    setStatus('Scanning...');
    setScanResults([]); // Clear previous results
    // Simulate scan results (in real-world, run actual commands or use APIs)
    setTimeout(() => {
      let results: string[] = [];
      if (method === 'Port Scan') {
        results = ['Port 22 open (SSH)', 'Port 80 open (HTTP)', 'Port 443 open (HTTPS)'];
      } else if (method === 'Vulnerability Scan') {
        results = ['CVE-2021-34527 (Windows Print Spooler)'];
      } else if (method === 'Web App Scan') {
        results = ['SQL Injection detected on /login endpoint', 'Cross-Site Scripting (XSS) on /search page'];
      } else if (method === 'Misconfiguration Scan') {
        results = ['HTTP server is running with default credentials', 'Open directory found at /admin'];
      }
      setScanResults(results);
      setStatus(`Scan completed using ${method}.`);
    }, 3000); // Simulate a delay
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="min-h-screen p-6 text-white bg-[#0d1117]"
    >
      <h1 className="text-4xl font-bold mb-2">Vulnerability Scan</h1>
      <p className="text-lg text-gray-400 mb-8">Perform vulnerability scans across systems and web apps.</p>

      {/* Scan Methods */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* Port Scan */}
        <Card className="bg-[#161b22] rounded-xl shadow-md hover:shadow-xl transition-shadow">
          <CardContent className="p-4">
            <h2 className="text-xl font-semibold mb-2">Port Scan</h2>
            <p className="text-gray-400">Identify open ports and services on the target system.</p>
            <Button
              className="mt-4"
              onClick={() => startScan('Port Scan')}
              disabled={status === 'Scanning...'}
            >
              Start Port Scan
            </Button>
          </CardContent>
        </Card>

        {/* Vulnerability Scan */}
        <Card className="bg-[#161b22] rounded-xl shadow-md hover:shadow-xl transition-shadow">
          <CardContent className="p-4">
            <h2 className="text-xl font-semibold mb-2">Vulnerability Scan</h2>
            <p className="text-gray-400">Scan for known vulnerabilities like CVEs using automated tools.</p>
            <Button
              className="mt-4"
              onClick={() => startScan('Vulnerability Scan')}
              disabled={status === 'Scanning...'}
            >
              Start Vulnerability Scan
            </Button>
          </CardContent>
        </Card>

        {/* Web Application Scan */}
        <Card className="bg-[#161b22] rounded-xl shadow-md hover:shadow-xl transition-shadow">
          <CardContent className="p-4">
            <h2 className="text-xl font-semibold mb-2">Web Application Scan</h2>
            <p className="text-gray-400">Scan web applications for vulnerabilities like SQLi, XSS, CSRF.</p>
            <Button
              className="mt-4"
              onClick={() => startScan('Web App Scan')}
              disabled={status === 'Scanning...'}
            >
              Start Web App Scan
            </Button>
          </CardContent>
        </Card>

        {/* Misconfiguration Scan */}
        <Card className="bg-[#161b22] rounded-xl shadow-md hover:shadow-xl transition-shadow">
          <CardContent className="p-4">
            <h2 className="text-xl font-semibold mb-2">Misconfiguration Scan</h2>
            <p className="text-gray-400">Detect misconfigurations like default credentials or open directories.</p>
            <Button
              className="mt-4"
              onClick={() => startScan('Misconfiguration Scan')}
              disabled={status === 'Scanning...'}
            >
              Start Misconfiguration Scan
            </Button>
          </CardContent>
        </Card>

      </div>

      {/* Scan Status */}
      <div className="mt-8">
        <h2 className="text-xl font-semibold mb-2">Status</h2>
        <p className="text-gray-400">{status}</p>
      </div>

      {/* Scan Results */}
      {scanResults.length > 0 && (
        <div className="mt-8">
          <h2 className="text-xl font-semibold mb-2">Scan Results</h2>
          <ul className="text-gray-400 list-disc pl-6">
            {scanResults.map((result, index) => (
              <li key={index}>{result}</li>
            ))}
          </ul>
        </div>
      )}
    </motion.div>
  );
};

export default VulnerabilityScan;
